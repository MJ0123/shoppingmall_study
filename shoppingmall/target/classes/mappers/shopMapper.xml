<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.mappers.shopMapper">

<!-- 카테고리별 상품 리스트 : 1차 분류 -->
<select id="list_1" resultType="com.mall.domain.GoodsViewVO">
select
	g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName, gdsPrice, gdsStock, gdsDes, gdsDate, g.gdsImg, g.gdsThumbImg
	from mall.tbl_goods g
		inner join mall.goods_category c
			on g.cateCode = c.cateCode
		where g.cateCode = #{cateCode}
			or c.cateCodeRef = #{cateCodeRef}
</select>

<!-- 카테고리별 상품 리스트 : 2차 분류 -->
<select id="list_2" resultType="com.mall.domain.GoodsViewVO">
select
	g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName, gdsPrice, gdsStock, gdsDes, gdsDate, g.gdsImg, g.gdsThumbImg
	from mall.tbl_goods g
		inner join mall.goods_category c
			on g.cateCode = c.cateCode
		where g.cateCode = #{cateCode}
</select>

<!-- 상품평(댓글) 작성 -->
<insert id="registReply">
	insert into mall.tbl_reply (gdsNum, userId, repNum, repCon)
		values (#{gdsNum}, #{userId}, #{repNum}, #{repCon})
</insert>

<!-- 상품평(댓글) 리스트 -->
<select id="replyList" resultType="com.mall.domain.ReplyListVO">
select
	r.gdsNum, r.userId, r.repNum, r.repCon, r.repDate, m.userName
		from mall.tbl_reply r
			inner join mall.tbl_member m
				on r.userId = m.userId
			where gdsNum = #{gdsNum};
</select>

<!-- 상품평(댓글) 삭제 -->
<delete id="deleteReply">
	delete from mall.tbl_reply
		where repNum = #{repNum}
			and userId = #{userId}
</delete>

<!-- 아이디 체크 -->
<!-- userId만 가져오기 때문에 결과 타입을 String으로 사용함 -->
<select id="replyUserIdCheck" resultType="String">
	select userId
		from mall.tbl_reply
			where repNum = #{repNum}
</select>

<!--  상품평(댓글) 수정 -->
<update id="modifyReply">
update mall.tbl_reply
	set
		repCon = #{repCon}
	where repNum = #{repNum}
		and userId = #{userId}
</update>

<!-- 카트 담기 -->
<insert id="addCart">
insert into mall.tbl_cart (cartNum, userId, gdsNum, cartStock)
	values (#{cartNum}, #{userId}, #{gdsNum}, #{cartStock})
</insert>

<!-- 카트 리스트 -->
<select id="cartList" resultType="com.mall.domain.CartListVO">
	select
		row_number() over(order by c.cartNum desc) as num,
		c.cartNum, c.userId, c.gdsNum, c.cartStock, c.addDate,
		g.gdsName, g.gdsPrice, g.gdsThumbImg
	from mall.tbl_cart c
		inner join mall.tbl_goods g
			on c.gdsNum = g.gdsNum
		where c.userId = #{userId}
</select>

<!-- 카트 삭제 -->
<delete id="deleteCart">
	delete
		from mall.tbl_cart
			where cartNum = #{cartNum}
				and userId = #{userId}
</delete>

<!-- 주문 정보 -->
<insert id="orderInfo">
	insert into mall.tbl_order(orderId, userId, orderRec, userAddr1, userAddr2, userAddr3, orderPhone, amount)
		values(#{orderId}, #{userId}, #{orderRec}, #{userAddr1}, #{userAddr2}, #{userAddr3}, #{orderPhone}, #{amount})
</insert>

<!-- 주문 상세 정보 -->
<insert id="orderInfo_Details">
	insert into mall.tbl_order_details(orderDetailsNum, orderId, gdsNum, cartStock)
		select #{orderDetailsNum}, #{orderId}, gdsNum, cartStock
			from mall.tbl_cart 
</insert>

<!-- 카트 비우기 -->
<delete id="cartAllDelete">
	delete 
		from mall.tbl_cart
			where userId = #{userId}
</delete>

<!-- 특정 유저의 주문 목록 -->
<select id="orderList" resultType="com.mall.domain.OrderVO">
	select
		orderId, userId, orderRec, userAddr1, userAddr2, userAddr3, orderPhone, amount, orderDate, delivery
	from mall.tbl_order
		where userId = #{userId}
			order by orderId desc
</select>

<!-- 특정 주문 목록 -->
<select id="orderView" resultType="com.mall.domain.OrderListVO">
	select
		o.orderId, o.userId, o.orderRec, o.userAddr1, o.userAddr2, o.userAddr3, o.orderPhone, o.amount, o.orderDate, o.delivery,
		d.orderDetailsNum, d.gdsNum, d.cartStock,
		g.gdsName, g.gdsThumbImg, g.gdsPrice
	from mall.tbl_order o
		inner join mall.tbl_order_details d
			on o.orderId = d.orderId
		inner join mall.tbl_goods g
			on d.gdsNum = g.gdsNum
		where o.userId = #{userId}
			and o.orderId = #{orderId}
</select>
</mapper>